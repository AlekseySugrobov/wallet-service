openapi: 3.0.1
info:
  title: wallet-service
  version: '1.0'


servers:
  - url: 'http://localhost:3000'

paths:
  /api/v1/wallet/{userId}/balance:
    get:
      summary: Returns balance of current user
      tags: [ "Wallet" ]
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Balance successfully got by user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
        '400':
          description: Wrong input parameters
        '404':
          description: Wallent doesn't exist
        '500':
          description: Internal server error
  /api/v1/wallet/{userId}:
    get:
      summary: Returns wallet by user identifier
      tags: [ "Wallet" ]
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Wallet successfully got by user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletDTO'
        '400':
          description: Wrong input parameters
        '404':
          description: Wallent doesn't exist
        '500':
          description: Internal server error
    delete:
      summary: Deletes wallet by user identifier
      tags: [ "Wallet" ]
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Wallet successfully deleted
        '400':
          description: Wrong input parameters
        '404':
          description: Wallet doesn't exist
        '500':
          description: Internal server error
    post:
      summary: Creates mew wallet
      tags: [ "Wallet" ]
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '201':
          description: Wallet created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletDTO'
        '400':
          description: Wrong input parameters
        '409':
          description: Wallet for specified user id already exists
        '500':
          description: Internal server error
  /api/v1/wallet/_search:
    post:
      summary: Searches wallets by filter
      tags: [ "Wallet" ]
      requestBody:
        $ref: '#/components/requestBodies/WalletFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WalletDTO'
        '204':
          description: Wallets not found
        '400':
          description: Wrong input parameters
        '500':
          description: Internal server error
  /api/v1/transaction:
    post:
      summary: Creates transaction
      tags: [ "Transaction" ]
      requestBody:
        $ref: '#/components/schemas/RegisterTransactionRequest'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDto'
        '404':
          description: Wallet not found
        '400':
          description: Wrong input parameters
        '409':
          description: Transaction id already exists
        '500':
          description: Internal server error
  /api/v1/transaction/{userId}:
    get:
      summary: Gets transactions by user id
      tags: [ "Transaction" ]
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Got transactions by user id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDto'
        '204':
          description: Not found transactions by user id
        '400':
          description: Wrong input parameters
        '404':
          description: Not existing user id
        '500':
          description: Internal server error


components:
  parameters:
    UserId:
      in: path
      name: userId
      schema:
        type: integer
        format: int64
      required: true
      description: User id
  requestBodies:
    WalletFilter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WalletFilter'
    RegisterTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterTransactionRequest'
  schemas:
    WalletDTO:
      title: WalletDTO
      description: Wallet data transfer object
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Identifier
        userId:
          type: integer
          format: int64
          description: User's identifier
        balance:
          type: number
    BalanceResponse:
      title: BalanceResponse
      description: Balance response
      type: object
      properties:
        userId:
          type: integer
          format: int64
          description: user's identifier
        balance:
          type: number
    WalletFilter:
      description: Filter for searching wallets
      title: WalletFilter
      type: object
      properties:
        userId:
          type: integer
          format: int64
          description: user's identifier
        minBalance:
          type: number
          description: Minimum balance
        maxBalance:
          type: number
          description: Maximum balance
    RegisterTransactionRequest:
      title: RegisterTransactionRequest
      description: Request for registering transaction
      type: object
      properties:
        userId:
          type: integer
          format: int64
          description: user's identifier
          nullable: false
        transactionId:
          type: string
          description: transaction's identifier
          nullable: false
        type:
          type: transactionType
          description: transaction's type
          nullable: false
        amount:
          type: number
          description: transaction amount
          nullable: false
          minimum: 1
    TransactionDto:
      description: Transaction info
      title: TransactionDTO
      type: object
      properties:
        userId:
          type: integer
          format: int64
          description: user's identifier
        transactionId:
          type: string
          description: Unique transaction id
        type:
          type: transactionType
          description: Transation type
        amount:
          type: number
          description: Transaction amount
        startDate:
          type: string
          format: date-time
          description: Transaction start datetime
        endDate:
          type: string
          format: date-time
          description: Transaction end datetime
        status:
          type: transactionStatus
          description: Transaction status
